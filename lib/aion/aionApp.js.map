{"version":3,"sources":["../../src/aion/aionApp.js"],"names":["HARDENED_KEY_MULTIPLIER","BIP44_MAX_OFFSET","AION_BASIC_PATH","Buffer","from","AION_APP_PREFIX","P1","P2","INS_GET_PUBLIC_KEY","INS_SIGN","getHardenedNumber","nr","toString","generateBip44Path","derivationIndex","offsetExpanded","Error","concat","genGetPublicKeyAPDUCommand","path","length","genSignPayloadAPDUCommand","payload","AionApp","constructor","transport","scrambleKey","decorateAppAPIMethods","getAccount","buffer","response","send","pubKey","slice","address","e","console","log","signPayload"],"mappings":"AACA,MAAMA,uBAAuB,GAAG,UAAhC;AACA,MAAMC,gBAAgB,GAAG,UAAzB;AACA,MAAMC,eAAe,GAAKC,MAAM,CAACC,IAAP,CAAY,kCAAZ,EAAgD,KAAhD,CAA1B;AACA,MAAMC,eAAe,GAAG,IAAxB;AAEA,MAAMC,EAAE,GAAG,IAAX;AACA,MAAMC,EAAE,GAAG,IAAX;AAEA,MAAMC,kBAAkB,GAAG,IAA3B;AACA,MAAMC,QAAQ,GAAG,IAAjB;;AAEA,SAASC,iBAAT,CAA2BC,EAA3B,EAA8B;AAC1B,SAAOR,MAAM,CAACC,IAAP,CAAY,CAAC,CAACJ,uBAAuB,GAAGW,EAA3B,MAAmC,CAApC,EAAuCC,QAAvC,CAAgD,EAAhD,CAAZ,EAAiE,KAAjE,CAAP;AACH;;AAED,SAASC,iBAAT,CAA2BC,eAA3B,EAAoD;AAChD,MAAIC,cAAc,GAAGD,eAAe,GAAG,kBAAvC;;AACA,MAAGC,cAAc,GAACd,gBAAlB,EAAmC;AAC/B,UAAMe,KAAK,CAAE,2DAA0Df,gBAAiB,EAA7E,CAAX;AACH;;AACD,SAAOE,MAAM,CAACc,MAAP,CAAc,CAACf,eAAD,EAAkBQ,iBAAiB,CAACI,eAAD,CAAnC,CAAd,CAAP,CALgD,CAMhD;AACH;;AAGD,SAAUI,0BAAV,CAAqCC,IAArC,EAAmD;AAC/C,SAAOhB,MAAM,CAACc,MAAP,CAAc,CAACd,MAAM,CAACC,IAAP,CAAY,CAACe,IAAI,CAACC,MAAL,GAAY,CAAb,CAAZ,CAAD,EAA+BD,IAA/B,CAAd,CAAP;AACH;;AAED,SAAUE,yBAAV,CAAoCF,IAApC,EAAkDG,OAAlD,EAAmE;AAC/D,SAAOnB,MAAM,CAACc,MAAP,CAAc,CAACd,MAAM,CAACC,IAAP,CAAY,CAACe,IAAI,CAACC,MAAL,GAAY,CAAb,CAAZ,CAAD,EAA+BD,IAA/B,EAAqCG,OAArC,CAAd,CAAP;AACH;;AAID,eAAe,MAAMC,OAAN,CAAa;AAExBC,EAAAA,WAAW,CAACC,SAAD,EAAYC,WAAW,GAAG,MAA1B,EAAiC;AACxC,QAAI,OAAQD,SAAR,KAAsB,WAA1B,EAAsC;AAClC,YAAM,IAAIT,KAAJ,CAAU,gCAAV,CAAN;AACH;;AACD,SAAKS,SAAL,GAAiBA,SAAjB;AACAA,IAAAA,SAAS,CAACE,qBAAV,CACI,IADJ,EAEI,CACI,YADJ,EAEI,aAFJ,CAFJ,EAMID,WANJ;AAQH;;AAID,QAAME,UAAN,CAAiBd,eAAjB,EAAyC;AACrC,QAAI;AACA,UAAIK,IAAI,GAAGN,iBAAiB,CAACC,eAAD,CAA5B;AACA,UAAIe,MAAM,GAAGX,0BAA0B,CAACC,IAAD,CAAvC;AACA,YAAMW,QAAQ,GAAG,MAAM,KAAKL,SAAL,CAAeM,IAAf,CAAoB1B,eAApB,EAAqCG,kBAArC,EAAyDF,EAAzD,EAA6DC,EAA7D,EAAiEsB,MAAjE,CAAvB;AACA,YAAMG,MAAM,GAAG7B,MAAM,CAACC,IAAP,CAAY0B,QAAQ,CAACG,KAAT,CAAe,CAAf,EAAkB,EAAlB,CAAZ,EAAmCrB,QAAnC,CAA4C,KAA5C,CAAf;AACA,YAAMsB,OAAO,GAAG,OAAM/B,MAAM,CAACC,IAAP,CAAY0B,QAAQ,CAACG,KAAT,CAAe,EAAf,CAAZ,EAAgCrB,QAAhC,CAAyC,KAAzC,CAAtB;AACA,aAAO;AAACoB,QAAAA,MAAD;AAASE,QAAAA;AAAT,OAAP;AACH,KAPD,CAOC,OAAOC,CAAP,EAAU;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAa,wBAAuBF,CAAE,EAAtC;AACA,YAAMA,CAAN;AACH;AACJ;;AAED,QAAMG,WAAN,CAAkBxB,eAAlB,EAA2CQ,OAA3C,EAA4D;AACxD,QAAI;AACA,UAAIH,IAAI,GAAGN,iBAAiB,CAACC,eAAD,CAA5B;AACA,UAAIe,MAAM,GAAGR,yBAAyB,CAACF,IAAD,EAAOG,OAAP,CAAtC;AACA,YAAMQ,QAAQ,GAAG,MAAM,KAAKL,SAAL,CAAeM,IAAf,CAAoB1B,eAApB,EAAqCI,QAArC,EAA+CH,EAA/C,EAAmDC,EAAnD,EAAuDsB,MAAvD,CAAvB;AACA,aAAO1B,MAAM,CAACC,IAAP,CAAY0B,QAAZ,EAAsBlB,QAAtB,CAA+B,KAA/B,CAAP;AACH,KALD,CAKC,OAAOuB,CAAP,EAAU;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAa,wBAAuBF,CAAE,EAAtC;AACA,YAAMA,CAAN;AACH;AACJ;;AA3CuB","sourcesContent":["//@flow\nconst HARDENED_KEY_MULTIPLIER = 0x80000000;\nconst BIP44_MAX_OFFSET = 0x0FFFFFFF;\nconst AION_BASIC_PATH  =  Buffer.from('8000002C800001A98000000080000000', 'hex');\nconst AION_APP_PREFIX = 0xe0;\n\nconst P1 = 0x00;\nconst P2 = 0x00;\n\nconst INS_GET_PUBLIC_KEY = 0x02;\nconst INS_SIGN = 0x04;\n\nfunction getHardenedNumber(nr){\n    return Buffer.from(((HARDENED_KEY_MULTIPLIER | nr) >>> 0).toString(16), 'hex');\n}\n\nfunction generateBip44Path(derivationIndex: number) {\n    let offsetExpanded = derivationIndex & 0x00000000FFFFFFFF;\n    if(offsetExpanded>BIP44_MAX_OFFSET){\n        throw Error(`derivationIndex cannot be greater than BIP44_MAX_OFFSET ${BIP44_MAX_OFFSET}`);\n    }\n    return Buffer.concat([AION_BASIC_PATH, getHardenedNumber(derivationIndex)]);\n    // return Buffer.from('8000002c8000003c800000000000000000000000','hex');\n}\n\n\nfunction  genGetPublicKeyAPDUCommand(path: Buffer) {\n    return Buffer.concat([Buffer.from([path.length/4]), path]);\n}\n\nfunction  genSignPayloadAPDUCommand(path: Buffer, payload: Buffer) {\n    return Buffer.concat([Buffer.from([path.length/4]), path, payload]);\n}\n\n\n\nexport default class AionApp{\n\n    constructor(transport, scrambleKey = 'aion'){\n        if (typeof  transport === 'undefined'){\n            throw new Error('Transport has not been defined');\n        }\n        this.transport = transport;\n        transport.decorateAppAPIMethods(\n            this,\n            [\n                'getAccount',\n                'signPayload',\n            ],\n            scrambleKey\n        );\n    }\n\n\n\n    async getAccount(derivationIndex: number){\n        try {\n            let path = generateBip44Path(derivationIndex);\n            let buffer = genGetPublicKeyAPDUCommand(path);\n            const response = await this.transport.send(AION_APP_PREFIX, INS_GET_PUBLIC_KEY, P1, P2, buffer);\n            const pubKey = Buffer.from(response.slice(0, 32)).toString('hex');\n            const address = '0x'+ Buffer.from(response.slice(32)).toString('hex');\n            return {pubKey, address}\n        }catch (e) {\n            console.log(`get Account error => ${e}`);\n            throw e;\n        }\n    }\n\n    async signPayload(derivationIndex: number, payload: Buffer) {\n        try {\n            let path = generateBip44Path(derivationIndex);\n            let buffer = genSignPayloadAPDUCommand(path, payload);\n            const response = await this.transport.send(AION_APP_PREFIX, INS_SIGN, P1, P2, buffer);\n            return Buffer.from(response).toString('hex')\n        }catch (e) {\n            console.log(`get Account error => ${e}`);\n            throw e;\n        }\n    }\n\n}"],"file":"aionApp.js"}